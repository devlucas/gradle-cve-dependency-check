apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

import org.apache.tools.ant.filters.ReplaceTokens

import static java.lang.System.getenv

sourceCompatibility = 1.7
version = generateVersion()
group = 'com.danielsomerfield.dependencycheck'
archivesBaseName = "gradle-cve-dependency-check"

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile localGroovy()
  compile gradleApi()
  compile 'org.owasp:dependency-check-core:[1.2,1.3)'
  testCompile "junit:junit:[4.1,4.2)"
}

test {
  exclude '**/*E2ETest.*'
}

task e2etest(type: Test, dependsOn: ['install']) {
  include '**/*E2ETest.*'
}

processResources {
  filter ReplaceTokens, tokens: [
      "version": project.version.toString()
  ]
}

def static generateVersion() {
  def versionNumber = '0.3.1'
  def buildName = getenv("CI") == 'true' ? getenv("SNAP_PIPELINE_COUNTER") : "${System.currentTimeMillis()}-DEV"
  "$versionNumber-$buildName"
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

gradle.taskGraph.whenReady { taskGraph ->
  if (taskGraph.allTasks.any { it instanceof Sign }) {
    allprojects { ext."signing.keyId" = getenv("SIGNING_KEY_ID") }
    allprojects { ext."signing.secretKeyRingFile" = getenv("SIGNING_SECRET_RING_KEY_FILE") }
    allprojects { ext."signing.password" = getenv("SIGNING_PASSWORD") }
  }
}

def ossrhUsername = getenv("OSSRH_USERNAME")
def ossrhPassword = getenv("OSSRH_PASSWORD")

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Gradle CVE Dependency Check'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'CVE Checking for Gradle'
        url 'https://github.com/danielsomerfield/gradle-cve-dependency-check'

        scm {
          connection 'https://github.com/danielsomerfield/gradle-cve-dependency-check.git'
          developerConnection 'https://github.com/danielsomerfield/gradle-cve-dependency-check.git'
          url 'https://github.com/danielsomerfield/gradle-cve-dependency-check'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'danielsomerfield'
            name 'Daniel Somerfield'
            email 'dsomerfi@thoughtworks.com'
          }
        }
      }
    }
  }
}