package com.danielsomerfield.cvecheck

import com.danielsomerfield.cvecheck.owaspdependencycheck.ScanningEngine
import com.danielsomerfield.util.Maybe
import com.danielsomerfield.util.TimeSource

class ScanningEngineSourceUpdate {
  private Configuration configuration;
  private RuntimeStore runtimeStore;
  private TimeSource timeSource;

  def ScanningEngineSourceUpdate(
      final Configuration configuration, final RuntimeStore runtimeStore, TimeSource timeSource) {
    this.configuration = configuration
    this.runtimeStore = runtimeStore
    this.timeSource = timeSource
  }

  def run(ScanningEngine engine){
    if (this.configuration.refreshAfter() <= 0 || refreshTimePast()) {
      engine.updateSource()
    }
  }

  private boolean refreshTimePast(){
    Maybe<Long> lastRefreshed = runtimeStore.lastRefreshed()
    long currentTime = timeSource.currentTimeInMillis()
    long refreshAfterInMillis = configuration.refreshAfter() * 1000;
    return !lastRefreshed.exists() || (currentTime - lastRefreshed.value > refreshAfterInMillis)
  }
}
