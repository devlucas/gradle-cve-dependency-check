package com.danielsomerfield.cvecheck

import com.danielsomerfield.util.Maybe
import com.danielsomerfield.util.TimeSource
import com.danielsomerfield.util.io.InputStreamFactory
import com.danielsomerfield.util.io.OutputStreamFactory

class DefaultRuntimeStore implements RuntimeStore {
  public static final String LAST_REFRESHED_PROPERTY = "lastRefreshed"
  private OutputStreamFactory outputStreamFactory;
  private InputStreamFactory inputStreamFactory;
  private TimeSource timeSource;
  private Properties backingProperties = new Properties();


  public DefaultRuntimeStore(final OutputStreamFactory outputStreamFactory, final InputStreamFactory inputStreamFactory, final TimeSource timeSource) {
    this.outputStreamFactory = outputStreamFactory
    this.timeSource = timeSource
    this.inputStreamFactory = inputStreamFactory;
  }

  @Override
  def Maybe<Long> lastRefreshed(){
    inputStreamFactory.inputStream.withCloseable {InputStream i ->
      backingProperties.load(i)
    }

    Maybe.some(backingProperties.getProperty(LAST_REFRESHED_PROPERTY)).map{x -> Long.valueOf(x)}
  }

  @Override
  def void refreshed(){
    backingProperties.setProperty(LAST_REFRESHED_PROPERTY, timeSource.currentTimeInMillis().toString());

    outputStreamFactory.outputStream.withCloseable {OutputStream out ->
      backingProperties.store(out, "Runtime store for CVE Check")
    }
  }
}
