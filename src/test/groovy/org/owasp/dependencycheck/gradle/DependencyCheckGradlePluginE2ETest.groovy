package org.owasp.dependencycheck.gradle

import org.apache.commons.io.FileUtils
import org.apache.commons.io.IOUtils
import org.junit.Ignore
import org.junit.Test

import java.nio.file.Files

import static java.nio.file.Files.createTempDirectory
import static org.apache.commons.io.FileUtils.copyDirectory
import static org.hamcrest.CoreMatchers.containsString
import static org.hamcrest.CoreMatchers.not
import static org.hamcrest.core.Is.is
import static org.junit.Assert.assertThat

class DependencyCheckGradlePluginE2ETest {

    @Test
    @Ignore
    public void testVulnerabilityFoundInGradleProject(){
        executeGradleBuild {int returnCode, String stderr ->
            assertThat(returnCode, is(not(0)))
            assertThat(stderr, containsString("CVE-2014-1904"))
        }
    }

    def executeGradleBuild(Closure closure){
        File tempDirFile = deployTestProject()
        def process = new ProcessBuilder("./gradlew", "test").directory(tempDirFile).start()
        def out = new ByteArrayOutputStream();
        IOUtils.copy(process.getErrorStream(), out)
        def errorOutput = new String(out.toByteArray(), "UTF-8")
        def returnCode = process.waitFor()
        closure(returnCode, errorOutput)
    }

    def File deployTestProject() {
        def srcFile = new File(new URL(getClass().getResource("/test-project").toExternalForm()).toURI())
        def tempDirFile = createTempDirectory("test-project").toFile()
        copyDirectory(srcFile, tempDirFile)
        new File(tempDirFile, "gradlew").setExecutable(true, true)
        tempDirFile
    }
}
