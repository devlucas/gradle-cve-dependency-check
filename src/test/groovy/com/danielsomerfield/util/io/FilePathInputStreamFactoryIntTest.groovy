package com.danielsomerfield.util.io

import org.apache.commons.io.IOUtils
import org.hamcrest.CoreMatchers
import org.junit.After
import org.junit.Assert
import org.junit.Test

class FilePathInputStreamFactoryIntTest {

  private String filePath;

  @After
  public void tearDown(){
    new File(filePath).delete()
  }

  @Test
  public void testReadWithExistingFile() {
    filePath = "/tmp/" + UUID.randomUUID().toString();
    String message = String.valueOf(System.currentTimeMillis());

    new FileOutputStream(filePath).withCloseable {OutputStream out ->
      out.write(message.getBytes("UTF-8"))
    }

    new FilePathInputStreamFactory(filePath).getInputStream().withCloseable {InputStream i ->
      Assert.assertThat(IOUtils.toString(i), CoreMatchers.is(message))
    }
  }

  @Test
  public void testReadWithNonExistingFile() {
    filePath = "/tmp/" + UUID.randomUUID().toString();

    new FilePathInputStreamFactory(filePath).getInputStream().withCloseable {InputStream i ->
      Assert.assertThat(IOUtils.toString(i), CoreMatchers.is(""))
    }
  }
}
