package com.danielsomerfield.cvecheck.gradle.handlers.buildRules

import com.danielsomerfield.cvecheck.ScanResult
import com.danielsomerfield.cvecheck.Vulnerability
import org.junit.Test

import static com.danielsomerfield.util.Maybe.some
import static org.hamcrest.CoreMatchers.is
import static org.junit.Assert.assertThat

class CVSSOverallThresholdBuildRuleTest {

  @Test
  public void testPassesIfUnderThreshold() {
    RuleOutcome buildOutcome = new CVSSOverallThresholdBuildRule(new BuildRuleConfiguration(some(5f))).execute(new ScanResult() {

      public List<Vulnerability> getVulnerabilities() {
        [
            new MockVulnerability(2),
            new MockVulnerability(2)
        ]
      }
    })
    assertThat(buildOutcome, is(RuleOutcome.Passed))
  }

  @Test
  public void testFailsIfOverThreshold() {
    RuleOutcome buildOutcome = new CVSSOverallThresholdBuildRule(new BuildRuleConfiguration(some(2f))).execute(new ScanResult() {
      public List<Vulnerability> getVulnerabilities() {
        [new MockVulnerability(2),
         new MockVulnerability(2)]
      }
    })
    assertThat(buildOutcome, is(RuleOutcome.Failed))
  }

}
