package com.danielsomerfield.cvecheck.gradle.handlers.buildRules

import com.danielsomerfield.util.Maybe
import org.junit.Test

import static com.danielsomerfield.util.Maybe.nothing
import static org.hamcrest.CoreMatchers.instanceOf
import static org.hamcrest.CoreMatchers.is
import static org.junit.Assert.assertThat

class CVEBuildRuleBuilderTest {

  private Map<String, Class<? extends BuildRule>> buildRuleTypes = ["foo": TestBuildRule.class]

  @Test
  public void builderCreatesRuleWithExpectedSettings() {
    def rule = new CVEBuildRuleBuilder(buildRuleTypes).setThreshold(5).setBuildFailureStrategy("foo").create()
    assertThat(rule.getValue(), is(instanceOf(TestBuildRule.class)))
  }

  @Test
  public void builderCreatesNothingWithUnknownType() {
    def rule = new CVEBuildRuleBuilder(buildRuleTypes).setThreshold(5).setBuildFailureStrategy("bar").create()
    assertThat(rule, is(nothing()))
  }

  public static class TestBuildRule implements BuildRule {

  }

}
