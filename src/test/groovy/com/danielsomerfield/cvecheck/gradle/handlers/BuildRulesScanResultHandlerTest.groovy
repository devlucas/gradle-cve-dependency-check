package com.danielsomerfield.cvecheck.gradle.handlers

import com.danielsomerfield.cvecheck.ScanResult
import com.danielsomerfield.cvecheck.Vulnerability
import com.danielsomerfield.cvecheck.gradle.handlers.buildRules.BuildRule
import com.danielsomerfield.cvecheck.gradle.handlers.buildRules.ListBackedBuildRules
import com.danielsomerfield.cvecheck.gradle.handlers.buildRules.RuleOutcome
import org.gradle.api.GradleException
import org.hamcrest.CoreMatchers

import static org.hamcrest.CoreMatchers.is
import org.junit.Test

import static org.junit.Assert.assertThat
import static org.junit.Assert.fail

class BuildRulesScanResultHandlerTest {

  @Test()
  public void testHandlerThrowsExceptionWhenHandlersResultFailure(){
    try {
      BuildRulesScanResultHandler handler = new BuildRulesScanResultHandler(new ListBackedBuildRules([new BuildRule() {
        @Override
        RuleOutcome execute(final ScanResult result) {
          RuleOutcome.Failed
        }

        @Override
        String getName() {
          "test"
        }
      }]))

      handler.handleScanResult(new ScanResult() {
        @Override
        int getVulnCount() {
          0
        }

        @Override
        List<Vulnerability> getVulnerabilities() {
          []
        }
      })

      fail("Should have thrown exception")

    } catch (GradleException e) {
      assertThat(e.getMessage(), is("The following rules failed: [test]"))
    }
  }
}
