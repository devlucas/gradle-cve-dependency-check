package com.danielsomerfield.cvecheck

import com.danielsomerfield.cvecheck.owaspdependencycheck.ScanningEngine
import groovy.mock.interceptor.MockFor
import org.gradle.util.Clock
import org.junit.Test

import static com.danielsomerfield.cvecheck.TestScaffold.createTypeSafeMock

class ScanningEngineSourceUpdateTest extends GroovyTestCase {

  private final Clock clock = new Clock() {
    public long getTimeInMs() {
      1429745628261
    }
  }

  @Test
  def void testAlwaysUpdate() {

    Configuration configuration = createTypeSafeMock(Configuration.class){
      it.demand.refreshAfter { -1 }
    }

    RuntimeStore runtimeStore = createTypeSafeMock(RuntimeStore.class) {
      it.demand.lastRefreshed { 1429745628262 }
    }

    MockFor scanningEngineMock = new MockFor(ScanningEngine)
    scanningEngineMock.demand.updateSource {}
    ScanningEngine scanningEngine = scanningEngineMock.proxyDelegateInstance() as ScanningEngine

    ScanningEngineSourceUpdate update = new ScanningEngineSourceUpdate(configuration, runtimeStore)
    update.run(scanningEngine)
    scanningEngineMock.verify(scanningEngine)
  }

  def void testTimeExpiredRequiresUpdate(){}
  def void testNeverUpdatedRequiresUpdate(){}
  def void testUpdateNotRequired(){}
}
